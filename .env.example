# Raspberry Pi ホストで使用する UID/GID。`id -u` と `id -g` の結果に置き換えてください。
UID=1000
GID=1000

# --- Ansible 用（必須定数）---
# ansible/raspi_setup.yml の実行に必要な定数です。未設定だと fail します。
# 使用例（実行前に export）:
#   export RASPI_TARGET_HOSTS=raspi
#   export RASPI_SET_HOSTNAME=raspi-media
#   export RASPI_NEW_USER=youruser
#   export RASPI_NEW_USER_PUBKEY="$(cat ~/.ssh/id_ed25519.pub)"
#   export RASPI_USER_UID=1000
#   export RASPI_USER_GID=1000
#   ansible-playbook -i ansible/inventory.ini ansible/raspi_setup.yml
RASPI_TARGET_HOSTS=
RASPI_SET_HOSTNAME=
RASPI_NEW_USER=
RASPI_NEW_USER_PUBKEY=
RASPI_USER_UID=
RASPI_USER_GID=

# タイムゾーン
TZ=Asia/Tokyo

# Docker コンテナ用ディレクトリのベースパス (OS 用 SSD 上を推奨)
CONFIG_ROOT=/opt/docker
CACHE_ROOT=/opt/docker/cache

# メディア用ストレージのマウントパス (OMV の UUID パスに合わせて修正)
MEDIA_ROOT=/srv/dev-disk-by-uuid-XXXX/media
VIDEOS_ROOT=/srv/dev-disk-by-uuid-XXXX/media/video
PRIVATE_VIDEOS_ROOT=/srv/dev-disk-by-uuid-XXXX/utatane/video
# 画像等を扱う場合は必要に応じて利用（現状未使用）
# PICTURE_ROOT=/srv/dev-disk-by-uuid-XXXX/media/picture
# Komga: 現状は公開(共有)ライブラリのみ使用します。非公開を使う場合は compose のコメント行を解除
MANGA_PUBLIC_ROOT=/srv/dev-disk-by-uuid-XXXX/media/manga
MANGA_PRIVATE_ROOT=/srv/dev-disk-by-uuid-XXXX/utatane/manga

# Jellyfin 公開 URL (外部から逆引きする場合のみ設定)
JELLYFIN_PUBLISHED_URL=

# Komga の Java ヒープ設定 (必要に応じて調整)
KOMGA_JAVA_OPTS=-Xms512m -Xmx1024m


# Tailscale 設定。必要に応じて Auth Key や追加引数を指定。
TAILSCALE_AUTHKEY=
TAILSCALE_HOSTNAME=raspi-media
TAILSCALE_EXTRA_ARGS=
