---
# OMV の SMB 設定/共有フォルダ/SMB共有を CUI 経由で適用する。

- name: Ensure required OMV CLIs exist
  command: which {{ item }}
  register: omv_cli_check
  changed_when: false
  failed_when: omv_cli_check.rc != 0
  loop:
    - omv-confdbadm
    - omv-rpc
    - omv-salt

- name: Ensure shared folders exist (media / utatane)
  import_tasks: sharedfolders.yml

- name: Ensure SMB shares exist and match desired
  import_tasks: smb_shares.yml

- name: Read current SMB settings
  command: omv-confdbadm read conf.service.smb
  register: smb_conf_raw
  changed_when: false
  failed_when: false

- name: Parse SMB settings (if possible)
  set_fact:
    smb_current: "{{ (smb_conf_raw.stdout | default('{}')) | from_json | default({}, true) }}"

- name: Build desired SMB settings
  set_fact:
    smb_desired:
      enable: "{{ (omv_smb.enable | default(true)) | bool }}"
      workgroup: "{{ omv_smb.workgroup | default('WORKGROUP') }}"
      minprotocol: "{{ omv_smb.min_protocol | default('SMB2') }}"
      maxprotocol: "{{ omv_smb.max_protocol | default('SMB3') }}"
      ntlm: "{{ (omv_smb.ntlm | default(false)) | bool }}"
      recycle: "{{ (omv_smb.recycle | default(true)) | bool }}"

- name: Detect differences in SMB settings
  set_fact:
    smb_needs_update: >-
      {{
        (smb_current.get('enable') | default(false) | bool) != (smb_desired.enable | bool)
        or (smb_current.get('workgroup') | default('')) != smb_desired.workgroup
        or (smb_current.get('minprotocol') | default('')) != smb_desired.minprotocol
        or (smb_current.get('maxprotocol') | default('')) != smb_desired.maxprotocol
      }}

- name: Apply SMB settings via omv-rpc when changed
  shell: >-
    omv-rpc 'Smb' 'setSettings' '{{ smb_desired | to_json }}'
  register: smb_set_result
  changed_when: true
  when: smb_needs_update

- name: Deploy samba (apply config)
  shell: omv-salt deploy run samba
  register: smb_deploy
  changed_when: "Deploying configuration succeeded" in (smb_deploy.stdout | default('')) or (smb_needs_update | bool)
  failed_when: false
